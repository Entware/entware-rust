From e95e5f3b778535f7b12c23c40161313ba90b545f Mon Sep 17 00:00:00 2001
From: Saluki <saluki@gmx.fr>
Date: Fri, 23 Sep 2022 08:25:59 +0200
Subject: [PATCH 3/6] Add --packet-help option

---
 src/args.rs  | 22 +++++++++++++++++++---
 src/main.rs  |  5 +++++
 src/utils.rs | 25 +++++++++++++++++++++++++
 3 files changed, 49 insertions(+), 3 deletions(-)

diff --git a/src/args.rs b/src/args.rs
index 12f6829..e324cdd 100644
--- a/src/args.rs
+++ b/src/args.rs
@@ -29,8 +29,11 @@ const EXAMPLES_HELP: &str = "EXAMPLES:
     # List network interfaces
     arp-scan -l
 
+    # Launch a scan on a specific range
+    arp-scan -i eth0 -n 10.37.3.1,10.37.4.55/24
+
     # Launch a scan on WiFi interface with fake IP and stealth profile
-    arp-scan -i wlp1s0 --source-ip 192.168.0.42 --profile stealth
+    arp-scan -i eth0 --source-ip 192.168.0.42 --profile stealth
 
     # Launch a scan on VLAN 45 with JSON output
     arp-scan -Q 45 -o json
@@ -158,6 +161,11 @@ pub fn build_args<'a>() -> Command<'a> {
                 .takes_value(true).value_name("OPERATION_ID")
                 .help("Custom ARP operation ID")
         )
+        .arg(
+            Arg::new("packet_help").long("packet-help")
+                .takes_value(false)
+                .help("Print details about an ARP packet")
+        )
         .after_help(EXAMPLES_HELP)
 }
 
@@ -199,7 +207,8 @@ pub struct ScanOptions {
     pub hw_addr: Option<u8>,
     pub proto_type: Option<EtherType>,
     pub proto_addr: Option<u8>,
-    pub arp_operation: Option<ArpOperation>
+    pub arp_operation: Option<ArpOperation>,
+    pub packet_help: bool
 }
 
 impl ScanOptions {
@@ -497,6 +506,8 @@ impl ScanOptions {
             },
             None => None
         };
+
+        let packet_help = matches.contains_id("packet_help");
     
         Arc::new(ScanOptions {
             profile,
@@ -517,7 +528,8 @@ impl ScanOptions {
             hw_addr,
             proto_type,
             proto_addr,
-            arp_operation
+            arp_operation,
+            packet_help
         })
     }
 
@@ -531,6 +543,10 @@ impl ScanOptions {
         matches!(&self.vlan_id, Some(_)) 
     }
 
+    pub fn request_protocol_print(&self) -> bool {
+        self.packet_help
+    }
+
 }
 
 
diff --git a/src/main.rs b/src/main.rs
index 6b219e1..5b40a2b 100644
--- a/src/main.rs
+++ b/src/main.rs
@@ -39,6 +39,11 @@ fn main() {
     // with an IPv4 address and root permissions (for crafting ARP packets).
 
     let scan_options = ScanOptions::new(&matches);
+
+    if scan_options.request_protocol_print() {
+        utils::print_ascii_packet();
+        process::exit(0);
+    }
     
     if !utils::is_root_user() {
         eprintln!("Should run this binary as root or use --help for options");
diff --git a/src/utils.rs b/src/utils.rs
index 870e7f3..4aefc8b 100644
--- a/src/utils.rs
+++ b/src/utils.rs
@@ -60,6 +60,31 @@ pub fn show_interfaces(interfaces: &[NetworkInterface]) {
     println!();
 }
 
+pub fn print_ascii_packet() {
+
+    println!();
+    println!(" 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 ");
+    println!("+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+");
+    println!("|         Hardware type         |        Protocol type          |");
+    println!("+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|");
+    println!("|         Hlen  | Plen          |          Operation            |");
+    println!("+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+");
+    println!("|                          Sender HA                            |");
+    println!("+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+");
+    println!("|             Sender HA         |      Sender IP                |");
+    println!("+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|");
+    println!("|             Sender IP         |      Target HA                |");
+    println!("+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|");
+    println!("|                          Target HA                            |");
+    println!("+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+");
+    println!("|                          Target IP                            |");
+    println!("+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+");
+    println!();
+    println!(" - Hardware type (2 bytes), use --hw-type option to change");
+    println!(" - Protocol type (2 bytes), use --proto-type option to change");
+    println!();
+}
+
 /**
  * Find a default network interface for scans, based on the operating system
  * priority and some interface technical details.
-- 
2.30.2

