--- a/src/lib.rs
+++ b/src/lib.rs
@@ -1,5 +1,6 @@
 #![doc = include_str!("../README.md")]
 
+use std::convert::TryInto;
 use tracing_core::{field::Field, span, Event, Subscriber};
 use tracing_subscriber::{
     layer::Context,
@@ -12,7 +13,7 @@ use std::{
     marker::PhantomData,
     path::Path,
     sync::{
-        atomic::{AtomicU64, Ordering},
+        atomic::{AtomicUsize, Ordering},
         Arc, Mutex,
     },
 };
@@ -40,7 +41,7 @@ where
 {
     out: Arc<Mutex<Sender<Message>>>,
     start: std::time::Instant,
-    max_tid: AtomicU64,
+    max_tid: AtomicUsize,
     include_args: bool,
     include_locations: bool,
     trace_style: TraceStyle,
@@ -407,7 +408,7 @@ where
         let layer = ChromeLayer {
             out: Arc::new(Mutex::new(tx)),
             start: std::time::Instant::now(),
-            max_tid: AtomicU64::new(0),
+            max_tid: AtomicUsize::new(0),
             name_fn: builder.name_fn.take(),
             cat_fn: builder.cat_fn.take(),
             include_args: builder.include_args,
@@ -426,8 +427,8 @@ where
                 Some(tid) => (tid, false),
                 None => {
                     let tid = self.max_tid.fetch_add(1, Ordering::SeqCst);
-                    value.replace(Some(tid));
-                    (tid, true)
+                    value.replace(Some(tid.try_into().unwrap()));
+                    (tid.try_into().unwrap(), true)
                 }
             }
         })
