--- a/src/atomic_shim.rs
+++ b/src/atomic_shim.rs
@@ -1,12 +1,13 @@
 ///! Inline of https://github.com/bltavares/atomic-shim
 
 #[cfg(not(any(
+    target_arch = "arm", not(target_feature = "v6"),
     target_arch = "mips",
     target_arch = "powerpc",
     feature = "mutex"
 )))]
 pub use std::sync::atomic::{AtomicI64, AtomicU64};
-#[cfg(any(target_arch = "mips", target_arch = "powerpc", feature = "mutex"))]
+#[cfg(any(target_arch = "arm", not(target_feature = "v6"), target_arch = "mips", target_arch = "powerpc", feature = "mutex"))]
 mod shim {
     use crossbeam_utils::sync::ShardedLock;
     use std::sync::atomic::Ordering;
@@ -289,6 +290,7 @@ mod shim {
 }
 
 #[cfg(any(
+    target_arch = "arm", not(target_feature = "v6"),
     target_arch = "mips",
     target_arch = "powerpc",
     feature = "mutex"
--- a/src/config.rs
+++ b/src/config.rs
@@ -273,7 +273,7 @@ impl Inner {
             + TryFrom<usize>
             + std::ops::Div<Output = T>
             + std::ops::Mul<Output = T>,
-        <T as std::convert::TryFrom<usize>>::Error: Debug,
+        <T as TryFrom<usize>>::Error: Debug,
     {
         let segment_size: T = T::try_from(self.segment_size).unwrap();
         value / segment_size * segment_size
