From 174cc60665a560886240583dcdb6f345b55861eb Mon Sep 17 00:00:00 2001
From: Zaid Iqbal <70579516+zaid3tech@users.noreply.github.com>
Date: Thu, 3 Mar 2022 22:45:41 +0500
Subject: [PATCH 07/12] device: fix stack overflow on running wg agg conf or wg
 set conf on large config files (#233)

Co-authored-by: zaid3tech <zaidiqbal49@gmail.com>
---
 boringtun/src/device/api.rs | 16 ++++++++--------
 boringtun/src/device/mod.rs |  6 +++---
 2 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/boringtun/src/device/api.rs b/boringtun/src/device/api.rs
index 5c4c7cc..6f4da66 100644
--- a/boringtun/src/device/api.rs
+++ b/boringtun/src/device/api.rs
@@ -271,21 +271,22 @@ fn api_set_peer(
     let mut replace_ips = false;
     let mut endpoint = None;
     let mut keepalive = None;
+    let mut public_key = pub_key;
     let mut preshared_key = None;
     let mut allowed_ips: Vec<AllowedIP> = vec![];
-
     while reader.read_line(&mut cmd).is_ok() {
         cmd.pop(); // remove newline if any
         if cmd.is_empty() {
             d.update_peer(
-                pub_key,
+                public_key,
                 remove,
                 replace_ips,
                 endpoint,
-                allowed_ips,
+                allowed_ips.as_slice(),
                 keepalive,
                 preshared_key,
             );
+            allowed_ips.clear(); //clear the vector content after update
             return 0; // Done
         }
         {
@@ -293,9 +294,7 @@ fn api_set_peer(
             if parsed_cmd.len() != 2 {
                 return EPROTO;
             }
-
             let (key, val) = (parsed_cmd[0], parsed_cmd[1]);
-
             match key {
                 "remove" => match val.parse::<bool>() {
                     Ok(true) => remove = true,
@@ -326,16 +325,17 @@ fn api_set_peer(
                 "public_key" => {
                     // Indicates a new peer section. Commit changes for current peer, and continue to next peer
                     d.update_peer(
-                        pub_key,
+                        public_key,
                         remove,
                         replace_ips,
                         endpoint,
-                        allowed_ips,
+                        allowed_ips.as_slice(),
                         keepalive,
                         preshared_key,
                     );
+                    allowed_ips.clear(); //clear the vector content after update
                     match val.parse::<X25519PublicKey>() {
-                        Ok(key) => return api_set_peer(reader, d, key),
+                        Ok(key) => public_key = key,
                         Err(_) => return EINVAL,
                     }
                 }
diff --git a/boringtun/src/device/mod.rs b/boringtun/src/device/mod.rs
index d47a0e4..dd96e06 100644
--- a/boringtun/src/device/mod.rs
+++ b/boringtun/src/device/mod.rs
@@ -293,12 +293,11 @@ impl Device {
         remove: bool,
         _replace_ips: bool,
         endpoint: Option<SocketAddr>,
-        allowed_ips: Vec<AllowedIP>,
+        allowed_ips: &[AllowedIP],
         keepalive: Option<u16>,
         preshared_key: Option<[u8; 32]>,
     ) {
         let pub_key = Arc::new(pub_key);
-
         if remove {
             // Completely remove a peer
             return self.remove_peer(&pub_key);
@@ -333,7 +332,8 @@ impl Device {
         self.peers_by_idx.insert(next_index, Arc::clone(&peer));
 
         for AllowedIP { addr, cidr } in allowed_ips {
-            self.peers_by_ip.insert(addr, cidr as _, Arc::clone(&peer));
+            self.peers_by_ip
+                .insert(*addr, *cidr as _, Arc::clone(&peer));
         }
 
         tracing::info!("Peer added");
-- 
2.30.2

