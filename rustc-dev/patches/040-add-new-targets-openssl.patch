--- a/vendor/openssl-probe-0.1.5/src/lib.rs
+++ b/vendor/openssl-probe-0.1.5/src/lib.rs
@@ -24,6 +24,7 @@ pub fn find_certs_dirs() -> Vec<PathBuf>
 fn cert_dirs_iter() -> impl Iterator<Item = &'static Path> {
     // see http://gagravarr.org/writing/openssl-certs/others.shtml
     [
+        "/opt/etc/ssl", // Entware
         "/var/ssl",
         "/usr/share/ssl",
         "/usr/local/ssl",
@@ -37,7 +38,6 @@ fn cert_dirs_iter() -> impl Iterator<Ite
         "/etc/pki/tls",
         "/etc/ssl",
         "/etc/certs",
-        "/opt/etc/ssl", // Entware
         "/data/data/com.termux/files/usr/etc/tls",
         "/boot/system/data/ssl",
     ]
--- a/vendor/openssl-src-111.17.0+1.1.1m/src/lib.rs
+++ b/vendor/openssl-src-111.17.0+1.1.1m/src/lib.rs
@@ -209,6 +209,18 @@ impl Build {
         }
 
         let os = match target {
+            "aarch64-openwrt-linux-gnu" => "linux-aarch64", // Entware/OpenWrt
+            "aarch64-openwrt-linux-musl" => "linux-aarch64", // Entware/OpenWrt
+            "arm-openwrt-linux-gnueabi" => "linux-armv4", // Entware/OpenWrt
+            "armv5te-openwrt-linux-gnueabi" => "linux-armv4", // Entware/OpenWrt
+            "armv7-openwrt-linux-gnueabi" => "linux-armv4", // Entware/OpenWrt
+            "i586-openwrt-linux-gnu" => "linux-elf", // Entware/OpenWrt
+            "i686-openwrt-linux-gnu" => "linux-elf", // Entware/OpenWrt
+            "mips-openwrt-linux-gnu" => "linux-mips32", // Entware/OpenWrt
+            "mips-openwrt-linux-musl" => "linux-mips32", // Entware/OpenWrt
+            "mipsel-openwrt-linux-gnu" => "linux-mips32", // Entware/OpenWrt
+            "mipsel-openwrt-linux-musl" => "linux-mips32", // Entware/OpenWrt
+            "x86_64-openwrt-linux-gnu" => "linux-x86_64", // Entware/OpenWrt
             "aarch64-apple-darwin" => "darwin64-arm64-cc",
             // Note that this, and all other android targets, aren't using the
             // `android64-aarch64` (or equivalent) builtin target. That
--- a/vendor/openssl-src-111.28.2+1.1.1w/src/lib.rs
+++ b/vendor/openssl-src-111.28.2+1.1.1w/src/lib.rs
@@ -229,6 +229,18 @@ impl Build {
         }
 
         let os = match target {
+            "aarch64-openwrt-linux-gnu" => "linux-aarch64", // Entware/OpenWrt
+            "aarch64-openwrt-linux-musl" => "linux-aarch64", // Entware/OpenWrt
+            "arm-openwrt-linux-gnueabi" => "linux-armv4", // Entware/OpenWrt
+            "armv5te-openwrt-linux-gnueabi" => "linux-armv4", // Entware/OpenWrt
+            "armv7-openwrt-linux-gnueabi" => "linux-armv4", // Entware/OpenWrt
+            "i586-openwrt-linux-gnu" => "linux-elf", // Entware/OpenWrt
+            "i686-openwrt-linux-gnu" => "linux-elf", // Entware/OpenWrt
+            "mips-openwrt-linux-gnu" => "linux-mips32", // Entware/OpenWrt
+            "mips-openwrt-linux-musl" => "linux-mips32", // Entware/OpenWrt
+            "mipsel-openwrt-linux-gnu" => "linux-mips32", // Entware/OpenWrt
+            "mipsel-openwrt-linux-musl" => "linux-mips32", // Entware/OpenWrt
+            "x86_64-openwrt-linux-gnu" => "linux-x86_64", // Entware/OpenWrt
             "aarch64-apple-darwin" => "darwin64-arm64-cc",
             // Note that this, and all other android targets, aren't using the
             // `android64-aarch64` (or equivalent) builtin target. That
