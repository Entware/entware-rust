# SPDX-License-Identifier: GPL-2.0-only
#
# Copyright (C) 2024 Entware

### deps
PKG_BUILD_DEPENDS += rustc-dev

CARGO_BUILD_DIR = $(PKG_BUILD_DIR)$(if $(CARGO_SOURCE_SUBDIR),/$(CARGO_SOURCE_SUBDIR))

CARGO_HOME:=$(STAGING_DIR)/host/share/cargo

CARGO_INSTALL_ROOT:=$(PKG_INSTALL_DIR)/opt
CARGO_TARGET_DIR:=$(PKG_BUILD_DIR)/openwrt-build

CARGO_BIN:=$(STAGING_DIR)/host/bin/cargo
RUSTC_BIN:=$(STAGING_DIR)/host/bin/rustc
RUSTC_WRAPPER_BIN:=$(RUSTC_BIN)
RUSTDOC_BIN:=$(STAGING_DIR)/host/bin/rustdoc
RUSTFMT_BIN:=$(STAGING_DIR)/host/bin/rustfmt

CARGO_ARGS ?=
CARGO_VARS ?=
RUSTC_VARS ?=
RUSTFLAGS ?=

### target
ifeq ($(CONFIG_TARGET_armv7_3_2),y)
  RUSTC_TARGET_ARCH:=$(subst arm,armv7,$(REAL_GNU_TARGET_NAME))
else
  RUSTC_TARGET_ARCH:=$(REAL_GNU_TARGET_NAME)
endif

### profile s(uper)strip by default
CARGO_PROFILE_SSTRIP ?= 1
ifeq ($(CARGO_PROFILE_SSTRIP),1)
  CARGO_PKG_PROFILE=sstrip
else
  CARGO_PKG_PROFILE=strip
endif

RUSTFLAGS += \
	-C relocation-model=static

### env var for `*-sys` packages
RUSTC_VARS_COMMON:= \
	CARGO_HOME=$(CARGO_HOME) \
	CRATE_CC_NO_DEFAULTS=true \
	CROSS_COMPILE=$(REAL_GNU_TARGET_NAME)- \
	PKG_CONFIG="$(STAGING_DIR_HOST)/bin/pkg-config" \
	PKG_CONFIG_ALLOW_CROSS=1 \
	PKG_CONFIG_ALLOW_SYSTEM_LIBS=1

RUSTC_HOST_VARS += \
	$(RUSTC_VARS_COMMON) \
	HOST_AR=$(AR) \
	HOST_CC=$(HOSTCC) \
	HOST_CXX=$(HOSTCXX) \
	HOST_CFLAGS="$(HOST_CFLAGS)" \
	HOST_CXXFLAGS="$(HOST_CFLAGS)" \
	HOST_PKG_CONFIG_PATH="$(STAGING_DIR_HOST)/lib/pkgconfig:$(STAGING_DIR_HOSTPKG)/lib/pkgconfig"

RUSTC_VARS += \
	$(RUSTC_VARS_COMMON) \
	PKG_CONFIG_PATH="$(STAGING_DIR)/opt/lib/pkgconfig:$(STAGING_DIR)/opt/share/pkgconfig" \
	PKG_CONFIG_SYSROOT_DIR=$(STAGING_DIR)/opt \
	\
	AR=$(TARGET_AR) \
	CC=$(TARGET_CC) \
	CXX=$(TARGET_CXX) \
	CFLAGS="$(TARGET_CFLAGS) $(TARGET_CPPFLAGS) -I$(STAGING_DIR)/opt/include" \
	CXXFLAGS="$(TARGET_CXXFLAGS) $(TARGET_CPPFLAGS) -I$(STAGING_DIR)/opt/include" \
	\
	CARGO_BUILD_RUSTC=$(RUSTC_BIN) \
	CARGO_BUILD_RUSTDOC=$(RUSTDOC_BIN) \
	CARGO_BUILD_RUSTFLAGS="$(RUSTFLAGS)" \
	CARGO_BUILD_TARGET=$(RUSTC_TARGET_ARCH) \
	CARGO_INSTALL_ROOT=$(CARGO_INSTALL_ROOT) \
	CARGO_TARGET_DIR=$(CARGO_TARGET_DIR) \
	RUSTFMT=$(RUSTFMT_BIN) \
	\
	TARGET=$(RUSTC_TARGET_ARCH) \
	TARGET_AR=$(TARGET_AR) \
	TARGET_CC=$(TARGET_CC) \
	TARGET_CXX=$(TARGET_CXX) \
	TARGET_CFLAGS="$(TARGET_CFLAGS) $(TARGET_CPPFLAGS) -I$(STAGING_DIR)/opt/include" \
	TARGET_CXXFLAGS="$(TARGET_CXXFLAGS) $(TARGET_CPPFLAGS) -I$(STAGING_DIR)/opt/include" \
	TARGET_PKG_CONFIG_PATH="$(STAGING_DIR)/opt/lib/pkgconfig:$(STAGING_DIR)/opt/share/pkgconfig" \
	TARGET_PKG_CONFIG_SYSROOT_DIR=$(STAGING_DIR)/opt

### python
CARGO_HOST_CONFIG_VARS = \
	CARGO_HOME=$(CARGO_HOME) \
	CC=$(HOSTCC_NOCACHE) \
	CXX=$(HOSTCXX_NOCACHE) \
	HOST_CC=$(HOSTCC_NOCACHE) \
	HOST_CXX=$(HOSTCXX_NOCACHE) \
	HOST_CFLAGS="$(HOST_CFLAGS)" \
	HOST_CXXFLAGS="$(HOST_CFLAGS)"

CARGO_PKG_CONFIG_VARS = \
	CARGO_HOME=$(CARGO_HOME) \
	CARGO_BUILD_RUSTFLAGS="$(RUSTFLAGS)" \
	CARGO_BUILD_TARGET=$(RUSTC_TARGET_ARCH) \
	CC=$(TARGET_CC_NOCACHE) \
	CXX=$(TARGET_CXX_NOCACHE) \
	TARGET_CC=$(TARGET_CC_NOCACHE) \
	TARGET_CXX=$(TARGET_CXX_NOCACHE) \
	TARGET_CFLAGS="$(TARGET_CFLAGS) $(TARGET_CPPFLAGS) -I$(STAGING_DIR)/opt/include" \
	TARGET_CXXFLAGS="$(TARGET_CXXFLAGS) $(TARGET_CPPFLAGS) -I$(STAGING_DIR)/opt/include"
