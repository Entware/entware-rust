#!/bin/sh

### colors
ansi_std="\033[0;0m"
ansi_red="\033[1;31m"
ansi_green="\033[1;32m"
ansi_yellow="\033[1;33m"
ansi_cyan="\033[1;36m"
ansi_white="\033[1;37m"

### columns
COLUMNS="45"

ACTION="$1"

[ -f /opt/etc/wireguard/wg-iface ] && . /opt/etc/wireguard/wg-iface

ENABLED=no
PROCS="wireguard-rs"
DESC="WireGuard"

WG_CFG="/opt/etc/wireguard/${WG:-wg0}.conf"
WG_DOWN="/opt/etc/wireguard/wg-down"
WG_UP="/opt/etc/wireguard/wg-up"

if [ ! -f "$WG_CFG" ]; then
  printf "$ansi_red %s $ansi_std\n" "Not configured. Exit."
  exit 1
fi

do_start() {
  [ "$ENABLED" = "yes" ] || return 1

  printf "$ansi_white %-${COLUMNS}s $ansi_std" "Starting $DESC ..."

  (
  trap - EXIT INT QUIT TSTP
  $SHELL $WG_UP > /dev/null 2>&1 &
  )

  if [ -z "$(pidof "$PROCS")" ]; then
    printf "$ansi_red %-${COLUMNS}s $ansi_std\n" "failed."
    logger "Failed to start $DESC from $CALLER."
    return 255
  else
    printf "$ansi_green %-${COLUMNS}s $ansi_std\n" "done."
    logger "Started $DESC from $CALLER."
    return 0
  fi
}

do_stop() {
  [ "$ENABLED" = "yes" ] || return 1

  printf "$ansi_white %-${COLUMNS}s $ansi_std" "Shutting down $DESC ..."

  (
  trap "" EXIT INT QUIT TSTP
  $SHELL $WG_DOWN
  )

  if [ -n "$(pidof "$PROCS")" ]; then
    printf "$ansi_red %-${COLUMNS}s $ansi_std\n" "failed."
    logger "Failed to stop $DESC."
    return 255
  else
    printf "$ansi_green %-${COLUMNS}s $ansi_std\n" "done."
    logger "The $DESC service has been stopped."
    return 0
  fi
}

do_check() {
  printf "$ansi_white %-${COLUMNS}s $ansi_std" "Checking status $DESC ..."

  if [ "$ENABLED" != "yes" ]; then
    printf "$ansi_cyan %-${COLUMNS}s $ansi_std\n" "autorun disabled."
    return 0
  elif [ "$ACTION" = "start" ] && [ -n "$(pidof "$PROCS")" ]; then
    printf "$ansi_yellow %-${COLUMNS}s $ansi_std\n" "already running."
    return 0
  elif [ -n "$(pidof "$PROCS")" ]; then
    printf "$ansi_green %-${COLUMNS}s $ansi_std\n" "alive."
    return 0
  else
    printf "$ansi_red %-${COLUMNS}s $ansi_std\n" "dead."
    return 1
  fi
}

do_enable() {
  printf "$ansi_white %-${COLUMNS}s $ansi_std" "Enabling autorun $DESC ..."

  if [ "$ENABLED" != "yes" ]; then
    sed -i 's,^ENABLED=no,ENABLED=yes,' "$0"
    printf "$ansi_green %-${COLUMNS}s $ansi_std\n" "done."
    return 0
  else
    printf "$ansi_yellow %-${COLUMNS}s $ansi_std\n" "already enabled."
    return 0
  fi
}

do_disable() {
  printf "$ansi_white %-${COLUMNS}s $ansi_std" "Disabling autorun $DESC ..."

  if [ "$ENABLED" = "yes" ]; then
    sed -i 's,^ENABLED=yes,ENABLED=no,' "$0"
    printf "$ansi_green %-${COLUMNS}s $ansi_std\n" "done."
    return 0
  else
    printf "$ansi_yellow %-${COLUMNS}s $ansi_std\n" "already disabled."
    return 0
  fi
}

case "$1" in
    start)
        do_check || do_start
    ;;
    stop)
        do_check && do_stop
    ;;
    restart)
        do_check > /dev/null; do_stop || do_check
        do_check > /dev/null || do_start
    ;;
    check|status)
        do_check
    ;;
    enable)
        do_enable
    ;;
    disable)
        do_disable
    ;;
    *)
        printf "$ansi_white %-${COLUMNS}s %-${COLUMNS}s $ansi_std\n" "Usage: $0" "{start|stop|restart|status}"
        exit 1
    ;;
esac

exit 0
