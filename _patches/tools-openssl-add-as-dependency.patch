From a995af543201fd0e7238c4f9993f7853669987f8 Mon Sep 17 00:00:00 2001
From: The-BB <tun.chen.bo@gmail.com>
Date: Wed, 31 May 2023 10:24:13 +0300
Subject: [PATCH] tools/openssl: add as dependency

---
 tools/Makefile                                |  6 +-
 .../patches/500-curl-fix-libdl-linking.patch  | 31 ++++++++
 tools/openssl/Makefile                        | 73 +++++++++++++++++++
 3 files changed, 108 insertions(+), 2 deletions(-)
 create mode 100644 tools/cmake/patches/500-curl-fix-libdl-linking.patch
 create mode 100644 tools/openssl/Makefile

diff --git a/tools/Makefile b/tools/Makefile
index 67985017..1fee213e 100644
--- a/tools/Makefile
+++ b/tools/Makefile
@@ -63,6 +63,7 @@ tools-y += mklibs
 #tools-y += mtd-utils
 tools-y += mtools
 tools-y += ninja
+tools-y += openssl
 #tools-y += padjffs2
 #tools-y += patch-image
 tools-y += patchelf
@@ -96,7 +97,7 @@ $(curdir)/b43-tools/compile := $(curdir)/bison/compile
 $(curdir)/bc/compile := $(curdir)/bison/compile $(curdir)/libtool/compile
 $(curdir)/bison/compile := $(curdir)/flex/compile
 $(curdir)/cbootimage/compile += $(curdir)/automake/compile
-$(curdir)/cmake/compile += $(curdir)/ninja/compile $(curdir)/expat/compile $(curdir)/xz/compile $(curdir)/zlib/compile $(curdir)/zstd/compile
+$(curdir)/cmake/compile += $(curdir)/openssl/compile $(curdir)/ninja/compile $(curdir)/expat/compile $(curdir)/xz/compile $(curdir)/zlib/compile $(curdir)/zstd/compile
 $(curdir)/dosfstools/compile := $(curdir)/automake/compile
 $(curdir)/e2fsprogs/compile := $(curdir)/libtool/compile
 $(curdir)/fakeroot/compile := $(curdir)/libtool/compile
@@ -123,6 +124,7 @@ $(curdir)/mklibs/compile := $(curdir)/libtool/compile
 $(curdir)/mpc/compile := $(curdir)/mpfr/compile $(curdir)/gmp/compile
 $(curdir)/mpfr/compile := $(curdir)/gmp/compile
 $(curdir)/mtd-utils/compile := $(curdir)/libtool/compile $(curdir)/e2fsprogs/compile $(curdir)/zlib/compile
+$(curdir)/openssl/compile := $(curdir)/pkgconf/compile
 $(curdir)/padjffs2/compile := $(curdir)/findutils/compile
 $(curdir)/patchelf/compile := $(curdir)/libtool/compile
 $(curdir)/pkgconf/compile := $(curdir)/meson/compile
@@ -147,7 +149,7 @@ else
 endif
 
 ifneq ($(CONFIG_CCACHE)$(CONFIG_SDK),)
-$(foreach tool, $(filter-out zstd zlib xz pkgconf patch ninja meson expat cmake,$(tools-y)), $(eval $(curdir)/$(tool)/compile += $(curdir)/ccache/compile))
+$(foreach tool, $(filter-out zstd zlib xz pkgconf patch openssl ninja meson expat cmake,$(tools-y)), $(eval $(curdir)/$(tool)/compile += $(curdir)/ccache/compile))
 tools-y += ccache
 $(curdir)/ccache/compile := $(curdir)/cmake/compile
 endif
diff --git a/tools/cmake/patches/500-curl-fix-libdl-linking.patch b/tools/cmake/patches/500-curl-fix-libdl-linking.patch
new file mode 100644
index 00000000..7dcd5038
--- /dev/null
+++ b/tools/cmake/patches/500-curl-fix-libdl-linking.patch
@@ -0,0 +1,31 @@
+FAILED: Utilities/cmcurl/curltest
+/bin/ld: .../lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_globallookup':
+dso_dlfcn.c:(.text+0x13): undefined reference to `dlopen'
+/bin/ld: dso_dlfcn.c:(.text+0x26): undefined reference to `dlsym'
+/bin/ld: dso_dlfcn.c:(.text+0x31): undefined reference to `dlclose'
+/bin/ld: .../lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_bind_func':
+dso_dlfcn.c:(.text+0x1b7): undefined reference to `dlsym'
+/bin/ld: dso_dlfcn.c:(.text+0x282): undefined reference to `dlerror'
+/bin/ld: .../lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_load':
+dso_dlfcn.c:(.text+0x2f1): undefined reference to `dlopen'
+/bin/ld: dso_dlfcn.c:(.text+0x369): undefined reference to `dlclose'
+/bin/ld: dso_dlfcn.c:(.text+0x3a5): undefined reference to `dlerror'
+/bin/ld: .../lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_pathbyaddr':
+dso_dlfcn.c:(.text+0x452): undefined reference to `dladdr'
+/bin/ld: dso_dlfcn.c:(.text+0x4c3): undefined reference to `dlerror'
+/bin/ld: .../lib/libcrypto.a(dso_dlfcn.o): in function `dlfcn_unload':
+dso_dlfcn.c:(.text+0x6a4): undefined reference to `dlclose'
+
+--- a/Utilities/cmcurl/CMakeLists.txt
++++ b/Utilities/cmcurl/CMakeLists.txt
+@@ -619,6 +619,10 @@ if(CURL_USE_OPENSSL)
+   if(HAVE_PTHREAD)
+     list(APPEND OPENSSL_LIBRARIES pthread)
+   endif()
++  check_library_exists("dl" dlopen "" HAVE_LIBDL)
++  if (HAVE_LIBDL)
++    list(APPEND OPENSSL_LIBRARIES dl)
++  endif ()
+   list(APPEND CURL_LIBS ${OPENSSL_LIBRARIES})
+   include_directories(${OPENSSL_INCLUDE_DIR})
+ 
diff --git a/tools/openssl/Makefile b/tools/openssl/Makefile
new file mode 100644
index 00000000..eabbed70
--- /dev/null
+++ b/tools/openssl/Makefile
@@ -0,0 +1,73 @@
+#
+# Copyright (C) 2018-2023 Entware
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=openssl
+PKG_BASE:=1.1.1
+PKG_BUGFIX:=t
+PKG_VERSION:=$(PKG_BASE)$(PKG_BUGFIX)
+PKG_RELEASE:=1
+
+PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
+PKG_SOURCE_URL:= \
+	http://www.openssl.org/source/ \
+	http://www.openssl.org/source/old/$(PKG_BASE)/ \
+	http://ftp.fi.muni.cz/pub/openssl/source/ \
+	http://ftp.fi.muni.cz/pub/openssl/source/old/$(PKG_BASE)/ \
+	ftp://ftp.pca.dfn.de/pub/tools/net/openssl/source/ \
+	ftp://ftp.pca.dfn.de/pub/tools/net/openssl/source/old/$(PKG_BASE)/
+
+PKG_HASH:=8dee9b24bdb1dcbf0c3d1e9b02fb8f6bf22165e807f45adeb7c9677536859d3b
+
+PKG_LICENSE:=OpenSSL
+PKG_LICENSE_FILES:=LICENSE
+PKG_CPE_ID:=cpe:/a:openssl:openssl
+
+HOST_BUILD_PARALLEL:=1
+
+include $(INCLUDE_DIR)/host-build.mk
+
+# default target is gcc if we don't know the host system
+OPENSSL_TARGET:=gcc
+ifeq ($(HOST_OS),Darwin)
+OPENSSL_TARGET:=darwin-$(HOST_ARCH)-cc
+endif
+ifeq ($(HOST_OS),Linux)
+OPENSSL_TARGET:=linux-$(HOST_ARCH)
+endif
+
+ifneq ($(CONFIG_CCACHE),)
+HOSTCC=$(HOSTCC_NOCACHE)
+HOSTCXX=$(HOSTCXX_NOCACHE)
+endif
+
+HOST_CFLAGS += $(HOST_FPIC)
+OPENSSL_OPTIONS := no-shared no-hw no-asm threads
+
+define Host/Configure
+	(cd $(HOST_BUILD_DIR); \
+		./Configure $(OPENSSL_TARGET) \
+		--prefix=$(STAGING_DIR_HOST) \
+		--libdir=lib \
+		$(HOST_CPPFLAGS) \
+		$(HOST_LDFLAGS) \
+		$(OPENSSL_OPTIONS) \
+	)
+endef
+
+define Host/Compile
+	+$(MAKE) $(PKG_JOBS) -C $(HOST_BUILD_DIR) \
+		CC="$(HOSTCC)" \
+		install_dev
+endef
+
+define Host/Install
+	:
+endef
+
+$(eval $(call HostBuild))
-- 
2.30.2

