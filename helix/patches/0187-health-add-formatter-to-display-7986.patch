From 65d041288067f1d1bbcf659c8b73ae04d77afb02 Mon Sep 17 00:00:00 2001
From: Sammo98 <75253485+Sammo98@users.noreply.github.com>
Date: Tue, 9 Jan 2024 01:15:50 +0000
Subject: [PATCH 187/188] health - add formatter to display (#7986)

---
 helix-term/src/health.rs | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

--- a/helix-term/src/health.rs
+++ b/helix-term/src/health.rs
@@ -145,7 +145,7 @@ pub fn languages_all() -> std::io::Resul
         }
     };
 
-    let mut headings = vec!["Language", "LSP", "DAP"];
+    let mut headings = vec!["Language", "LSP", "DAP", "Formatter"];
 
     for feat in TsFeature::all() {
         headings.push(feat.short_title())
@@ -203,6 +203,12 @@ pub fn languages_all() -> std::io::Resul
         let dap = lang.debugger.as_ref().map(|dap| dap.command.as_str());
         check_binary(dap);
 
+        let formatter = lang
+            .formatter
+            .as_ref()
+            .map(|formatter| formatter.command.as_str());
+        check_binary(formatter);
+
         for ts_feat in TsFeature::all() {
             match load_runtime_file(&lang.language_id, ts_feat.runtime_filename()).is_ok() {
                 true => column("âœ“", Color::Green),
@@ -285,6 +291,13 @@ pub fn language(lang_str: String) -> std
         lang.debugger.as_ref().map(|dap| dap.command.to_string()),
     )?;
 
+    probe_protocol(
+        "formatter",
+        lang.formatter
+            .as_ref()
+            .map(|formatter| formatter.command.to_string()),
+    )?;
+
     for ts_feat in TsFeature::all() {
         probe_treesitter_feature(&lang_str, *ts_feat)?
     }
