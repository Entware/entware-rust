--- a/crates/uv-build-frontend/src/error.rs
+++ b/crates/uv-build-frontend/src/error.rs
@@ -38,7 +38,7 @@ static MISSING_HEADER_RE_MSVC: LazyLock<
 
 /// e.g. `/usr/bin/ld: cannot find -lncurses: No such file or directory`
 static LD_NOT_FOUND_RE: LazyLock<Regex> = LazyLock::new(|| {
-    Regex::new(r"/usr/bin/ld: cannot find -l([a-zA-Z10-9]+): No such file or directory").unwrap()
+    Regex::new(r"/opt/bin/ld: cannot find -l([a-zA-Z10-9]+): No such file or directory").unwrap()
 });
 
 /// e.g. `error: invalid command 'bdist_wheel'`
--- a/crates/uv-python/src/libc.rs
+++ b/crates/uv-python/src/libc.rs
@@ -196,7 +196,7 @@ fn find_ld_path() -> Result<PathBuf, Lib
     // See: https://github.com/astral-sh/uv/pull/1493
     // See: https://github.com/astral-sh/uv/issues/1810
     // See: https://github.com/astral-sh/uv/issues/4242#issuecomment-2306164449
-    let attempts = ["/bin/sh", "/usr/bin/env", "/bin/dash", "/bin/ls"];
+    let attempts = ["/opt/bin/sh", "/bin/sh", "/usr/bin/env", "/bin/dash", "/bin/ls"];
     for path in attempts {
         if let Some(ld_path) = find_ld_path_at(path) {
             return Ok(ld_path);
--- a/crates/uv-settings/src/lib.rs
+++ b/crates/uv-settings/src/lib.rs
@@ -189,7 +189,7 @@ fn user_config_dir() -> Option<PathBuf>
 #[cfg(not(windows))]
 fn locate_system_config_xdg(value: Option<&str>) -> Option<PathBuf> {
     // On Linux and macOS, read the `XDG_CONFIG_DIRS` environment variable.
-    let default = "/etc/xdg";
+    let default = "/opt/etc/xdg";
     let config_dirs = value.filter(|s| !s.is_empty()).unwrap_or(default);
 
     for dir in config_dirs.split(':').take_while(|s| !s.is_empty()) {
@@ -231,7 +231,7 @@ fn system_config_file() -> Option<PathBu
 
         // Fallback to `/etc/uv/uv.toml` if `XDG_CONFIG_DIRS` is not set or no valid
         // path is found.
-        let candidate = Path::new("/etc/uv/uv.toml");
+        let candidate = Path::new("/opt/etc/uv/uv.toml");
         match candidate.try_exists() {
             Ok(true) => Some(candidate.to_path_buf()),
             Ok(false) => None,
--- a/python/uv/_build_backend.py
+++ b/python/uv/_build_backend.py
@@ -4,8 +4,8 @@ Python shims for the PEP 517 and PEP 660
 Major imports in this module are required to be lazy:
 ```
 $ hyperfine \
-     "/usr/bin/python3 -c \"print('hi')\"" \
-     "/usr/bin/python3 -c \"from subprocess import check_call; print('hi')\""
+     "/opt/bin/python3 -c \"print('hi')\"" \
+     "/opt/bin/python3 -c \"from subprocess import check_call; print('hi')\""
 Base: Time (mean ± σ):      11.0 ms ±   1.7 ms    [User: 8.5 ms, System: 2.5 ms]
 With import: Time (mean ± σ):      15.2 ms ±   2.0 ms    [User: 12.3 ms, System: 2.9 ms]
 Base 1.38 ± 0.28 times faster than with import
