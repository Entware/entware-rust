before:
root@toor: /opt/root # uv python list -v
DEBUG uv 0.5.4
DEBUG Searching for any Python interpreter in managed installations or search path
DEBUG Searching for managed installations at `.local/share/uv/python`
DEBUG Failed to inspect Python interpreter from search path at `/opt/bin/python` 
DEBUG Skipping bad interpreter at /opt/bin/python from search path: Querying Python at `/opt/bin/python` did not return the expected data
unknown variant `mips`, expected one of `aarch64`, `arm64`, `armv6l`, `armv7l`, `armv8l`, `powerpc64le`, `ppc64le`, `powerpc64`, `ppc64`, `i386`, `i686`, `x86`, `amd64`, `x86_64`, `s390x`, `riscv64`
...

after:
root@toor: /opt/root # uv python list -v
DEBUG uv 0.5.4
DEBUG Searching for any Python interpreter in managed installations or search path
DEBUG Searching for managed installations at `.local/share/uv/python`
DEBUG Found `cpython-3.11.10-linux-mips-gnu` at `/opt/bin/python` (search path)
DEBUG Found `cpython-3.11.10-linux-mips-gnu` at `/opt/bin/python3` (search path)
DEBUG Found `cpython-3.11.10-linux-mips-gnu` at `/opt/bin/python3.11` (search path)
cpython-3.11.10-linux-mips-gnu    /opt/bin/python3.11
cpython-3.11.10-linux-mips-gnu    /opt/bin/python3 -> python3.11
cpython-3.11.10-linux-mips-gnu    /opt/bin/python -> python3.11
...

---

--- a/crates/uv-platform-tags/src/platform.rs
+++ b/crates/uv-platform-tags/src/platform.rs
@@ -96,6 +96,8 @@ pub enum Arch {
     Armv6L,
     #[serde(alias = "armv8l")]
     Armv7L,
+    Mips,
+    Mipsel,
     #[serde(alias = "ppc64le")]
     Powerpc64Le,
     #[serde(alias = "ppc64")]
@@ -118,6 +120,8 @@ impl fmt::Display for Arch {
             Self::Armv5TEL => write!(f, "armv5tel"),
             Self::Armv6L => write!(f, "armv6l"),
             Self::Armv7L => write!(f, "armv7l"),
+            Self::Mips => write!(f, "mips"),
+            Self::Mipsel => write!(f, "mipsel"),
             Self::Powerpc64Le => write!(f, "ppc64le"),
             Self::Powerpc64 => write!(f, "ppc64"),
             Self::Powerpc => write!(f, "ppc"),
@@ -139,6 +143,8 @@ impl FromStr for Arch {
             "armv5tel" => Ok(Self::Armv5TEL),
             "armv6l" => Ok(Self::Armv6L),
             "armv7l" => Ok(Self::Armv7L),
+            "mips" => Ok(Self::Mips),
+            "mipsel" => Ok(Self::Mipsel),
             "ppc64le" => Ok(Self::Powerpc64Le),
             "ppc64" => Ok(Self::Powerpc64),
             "ppc" => Ok(Self::Powerpc),
@@ -168,7 +174,7 @@ impl Arch {
             // manylinux_2_36
             Self::LoongArch64 => Some(36),
             // unsupported
-            Self::Powerpc | Self::Armv5TEL | Self::Armv6L => None,
+            Self::Powerpc | Self::Armv5TEL | Self::Armv6L | Self::Mips | Self::Mipsel => None,
         }
     }
 
@@ -179,6 +185,8 @@ impl Arch {
             Self::Armv5TEL => "armv5tel",
             Self::Armv6L => "armv6l",
             Self::Armv7L => "armv7l",
+            Self::Mips => "mips",
+            Self::Mipsel => "mipsel",
             Self::Powerpc64Le => "ppc64le",
             Self::Powerpc64 => "ppc64",
             Self::Powerpc => "ppc",
@@ -197,6 +205,8 @@ impl Arch {
             Self::Armv5TEL,
             Self::Armv6L,
             Self::Armv7L,
+            Self::Mips,
+            Self::Mipsel,
             Self::Powerpc64Le,
             Self::Powerpc64,
             Self::Powerpc,
--- a/crates/uv-python/src/platform.rs
+++ b/crates/uv-python/src/platform.rs
@@ -280,6 +280,14 @@ impl From<&uv_platform_tags::Arch> for A
                 family: target_lexicon::Architecture::Arm(target_lexicon::ArmArchitecture::Armv7),
                 variant: None,
             },
+            uv_platform_tags::Arch::Mips => Self {
+                family: target_lexicon::Architecture::Mips32(target_lexicon::Mips32Architecture::Mips),
+                variant: None,
+            },
+            uv_platform_tags::Arch::Mipsel => Self {
+                family: target_lexicon::Architecture::Mips32(target_lexicon::Mips32Architecture::Mipsel),
+                variant: None,
+            },
             uv_platform_tags::Arch::S390X => Self {
                 family: target_lexicon::Architecture::S390x,
                 variant: None,
