--- a/src/config/container.rs
+++ b/src/config/container.rs
@@ -613,7 +613,7 @@ impl Configuration {
         //   - current directory
 
         // merge a config found at /etc/feroxbuster/ferox-config.toml
-        let config_file = Path::new("/etc/feroxbuster").join(DEFAULT_CONFIG_NAME);
+        let config_file = Path::new("/opt/etc/feroxbuster").join(DEFAULT_CONFIG_NAME);
         Self::parse_and_merge_config(config_file, config)?;
 
         // merge a config found at ~/.config/feroxbuster/ferox-config.toml
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -72,12 +72,12 @@ pub(crate) const DEFAULT_BACKUP_EXTENSIO
 /// - `.\seclists\Discovery\Web-Content\raft-medium-directories.txt`
 #[cfg(not(target_os = "windows"))]
 pub const DEFAULT_WORDLIST: &str =
-    "/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt";
+    "/opt/share/seclists/Discovery/Web-Content/raft-medium-directories.txt";
 #[cfg(target_os = "windows")]
 pub const DEFAULT_WORDLIST: &str =
     ".\\SecLists\\Discovery\\Web-Content\\raft-medium-directories.txt";
 pub const SECONDARY_WORDLIST: &str =
-    "/usr/local/share/seclists/Discovery/Web-Content/raft-medium-directories.txt";
+    "/opt/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt";
 
 /// Number of milliseconds to wait between polls of `PAUSE_SCAN` when user pauses a scan
 pub(crate) const SLEEP_DURATION: u64 = 500;
@@ -192,7 +192,7 @@ mod tests {
     fn default_wordlist() {
         assert_eq!(
             DEFAULT_WORDLIST,
-            "/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt"
+            "/opt/share/seclists/Discovery/Web-Content/raft-medium-directories.txt"
         );
     }
 
--- a/src/scan_manager/tests.rs
+++ b/src/scan_manager/tests.rs
@@ -478,7 +478,7 @@ fn feroxstates_feroxserialize_implementa
         r#""num_requests":0"#,
         r#""config""#,
         r#""type":"configuration""#,
-        r#""wordlist":"/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt""#,
+        r#""wordlist":"/opt/share/seclists/Discovery/Web-Content/raft-medium-directories.txt""#,
         r#""config""#,
         r#""proxy":"""#,
         r#""replay_proxy":"""#,
--- a/src/utils.rs
+++ b/src/utils.rs
@@ -1017,7 +1017,7 @@ mod tests {
     /// provide a denier from which we can't check a host, which results in no comparison, expect false
     fn should_deny_url_doesnt_compare_non_domains() {
         let scan_url = "https://testdomain.com/";
-        let deny_url = "unix:/run/foo.socket";
+        let deny_url = "unix:/opt/var/run/foo.socket";
         let tested_url = Url::parse("https://testdomain.com/denied/").unwrap();
 
         let scans = Arc::new(FeroxScans::default());
@@ -1074,7 +1074,7 @@ mod tests {
     /// new expected behavior
     fn should_deny_url_doesnt_compare_non_domains_in_scanned() {
         let deny_url = "https://testdomain.com/";
-        let scan_url = "unix:/run/foo.socket";
+        let scan_url = "unix:/opt/var/run/foo.socket";
         let tested_url = Url::parse("https://testdomain.com/denied/").unwrap();
 
         let scans = Arc::new(FeroxScans::default());
--- a/tests/test_main.rs
+++ b/tests/test_main.rs
@@ -21,11 +21,11 @@ fn main_use_root_owned_file_as_wordlist(
         .arg("--url")
         .arg(srv.url("/"))
         .arg("--wordlist")
-        .arg("/etc/shadow")
+        .arg("/opt/etc/shadow")
         .arg("-vvvv")
         .assert()
         .success()
-        .stderr(predicate::str::contains("Could not open /etc/shadow"));
+        .stderr(predicate::str::contains("Could not open /opt/etc/shadow"));
 
     assert_eq!(mock.hits(), 0);
 }
--- a/ferox-config.toml.example
+++ b/ferox-config.toml.example
@@ -25,7 +25,7 @@
 # auto_bail = true
 # json = true
 # output = "/targets/ellingson_mineral_company/gibson.txt"
-# debug_log = "/var/log/find-the-derp.log"
+# debug_log = "/opt/var/log/find-the-derp.log"
 # user_agent = "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0"
 # random_agent = false
 # redirects = true
