--- a/src/main.rs
+++ b/src/main.rs
@@ -31,7 +31,7 @@ mod undo;
 mod util;
 
 use clap::{App, Arg};
-use directories::BaseDirs;
+//use directories::BaseDirs;
 use document::Document;
 use editor::{Direction, Editor, Position};
 use oxa::Variable;
@@ -49,7 +49,7 @@ macro_rules! log {
         let file = OpenOptions::new()
             .create(true)
             .append(true)
-            .open("/tmp/ox.log");
+            .open("/opt/var/log/ox.log");
         if let Ok(mut log) = file {
             writeln!(log, "{}: {}", $type, $msg).unwrap();
         } else {
@@ -73,7 +73,7 @@ fn main() {
         eprintln!("{}", e);
     }));
     // Attempt to start an editor instance
-    let config_dir = load_config().unwrap_or_else(|| " ~/.config/ox/ox.ron".to_string());
+    let config_dir = "/opt/etc/ox.ron";
     // Gather the command line arguments
     let cli = App::new("Ox")
         .version(VERSION)
@@ -111,11 +111,11 @@ file.txt:100 (This will go to line 100 i
     }
 }
 
-fn load_config() -> Option<String> {
-    // Load the configuration file
-    let base_dirs = BaseDirs::new()?;
-    Some(format!(
-        "{}/ox/ox.ron",
-        base_dirs.config_dir().to_str()?.to_string()
-    ))
-}
+//fn load_config() -> Option<String> {
+//    // Load the configuration file
+//    let base_dirs = BaseDirs::new()?;
+//    Some(format!(
+//        "{}/ox/ox.ron",
+//        base_dirs.config_dir().to_str()?.to_string()
+//    ))
+//}
