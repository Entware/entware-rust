--- a/src/config.rs
+++ b/src/config.rs
@@ -242,9 +242,9 @@ mod tests {
     fn config_home() {
         let tmp_home = TempDir::new().expect("Could not create temporary directory");
         test_config_dir(
-            "HOME".as_ref(),
+            "/opt/etc".as_ref(),
             tmp_home.path().as_os_str(),
-            &tmp_home.path().join(".config/kibi"),
+            &tmp_home.path().join("kibi"),
         );
     }
 
--- a/src/unix.rs
+++ b/src/unix.rs
@@ -45,11 +45,11 @@ fn xdg_dirs(xdg_type: &str, def_home_suf
 }
 
 /// Return configuration directories for UNIX systems
-pub fn conf_dirs() -> Vec<String> { xdg_dirs("CONFIG", "/.config", "/etc/xdg:/etc") }
+pub fn conf_dirs() -> Vec<String> { xdg_dirs("CONFIG", "/.config", "/opt/etc") }
 
 /// Return syntax directories for UNIX systems
 pub fn data_dirs() -> Vec<String> {
-    xdg_dirs("DATA", "/.local/share", "/usr/local/share/:/usr/share/")
+    xdg_dirs("DATA", "/.local/share", "/opt/share/")
 }
 
 /// Return the current window size as (rows, columns).
