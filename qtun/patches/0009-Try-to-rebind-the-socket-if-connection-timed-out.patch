From b7d0ce5d4533ebd908a11c3b0cb92ea960a3800c Mon Sep 17 00:00:00 2001
From: Max Lv <mlv@nvidia.com>
Date: Thu, 17 Mar 2022 11:09:40 +0800
Subject: [PATCH 09/13] Try to rebind the socket if connection timed out

---
 src/client.rs | 25 +++++++++++++++++++++++--
 1 file changed, 23 insertions(+), 2 deletions(-)

--- a/src/client.rs
+++ b/src/client.rs
@@ -5,7 +5,8 @@ use tokio::net::{TcpListener, TcpStream}
 
 use anyhow::{anyhow, Result};
 use futures::future::try_join;
-use log::info;
+use log::{error, info};
+use quinn::ConnectionError;
 use quinn::Endpoint;
 use structopt::{self, StructOpt};
 
@@ -115,7 +116,27 @@ async fn transfer(
     let new_conn = endpoint
         .connect(*remote, &host)?
         .await
-        .map_err(|e| anyhow!("failed to connect: {}", e))?;
+        .map_err(|e| {
+            if e == ConnectionError::TimedOut {
+                let socket = if cfg!(target_os = "windows") {
+                    std::net::UdpSocket::bind("0.0.0.0:0").unwrap()
+                } else {
+                    std::net::UdpSocket::bind("[::]:0").unwrap()
+                };
+                let addr = socket.local_addr().unwrap();
+                let ret = endpoint.rebind(socket);
+                match ret {
+                    Ok(_) => {
+                        info!("rebinding to: {}", addr);
+                    }
+                    Err(e) => {
+                        error!("rebind fail: {:?}", e);
+                    }
+                }
+            }
+            anyhow!("failed to connect: {:?}", e)
+        })
+        .unwrap();
 
     let quinn::NewConnection {
         connection: conn, ..
