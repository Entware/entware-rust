--- a/compiler/rustc_data_structures/src/sip128/tests.rs
+++ b/compiler/rustc_data_structures/src/sip128/tests.rs
@@ -124,7 +124,7 @@ fn test_siphash_1_3_test_vector() {
 }
 
 #[test]
-#[cfg(target_arch = "arm")]
+#[cfg(target_arch = "arm", not(target_feature = "v6"))]
 fn test_hash_usize() {
     let val = 0xdeadbeef_deadbeef_u64;
     assert!(hash(&(val as u64)) != hash(&(val as usize)));
--- a/compiler/rustc_data_structures/src/marker.rs
+++ b/compiler/rustc_data_structures/src/marker.rs
@@ -147,14 +147,14 @@ cfg_match! {
             [crate::owned_slice::OwnedSlice]
         );
 
-        // PowerPC and MIPS platforms with 32-bit pointers do not
+        // ARM (armv5te), PowerPC and MIPS platforms with 32-bit pointers do not
         // have AtomicU64 type.
-        #[cfg(not(any(target_arch = "powerpc", target_arch = "mips")))]
+        #[cfg(not(any(target_arch = "powerpc", target_arch = "mips", target_arch = "arm", not(target_feature = "v6"))))]
         already_sync!(
             [std::sync::atomic::AtomicU64]
         );
 
-        #[cfg(any(target_arch = "powerpc", target_arch = "mips"))]
+        #[cfg(any(target_arch = "powerpc", target_arch = "mips", target_arch = "arm", not(target_feature = "v6")))]
         already_sync!(
             [portable_atomic::AtomicU64]
         );
--- a/compiler/rustc_data_structures/src/sync.rs
+++ b/compiler/rustc_data_structures/src/sync.rs
@@ -267,12 +267,12 @@ cfg_match! {
 
         pub use std::sync::atomic::{AtomicBool, AtomicUsize, AtomicU32};
 
-        // PowerPC and MIPS platforms with 32-bit pointers do not
+        // ARM (armv5te), PowerPC and MIPS platforms with 32-bit pointers do not
         // have AtomicU64 type.
-        #[cfg(not(any(target_arch = "powerpc", target_arch = "mips")))]
+        #[cfg(not(any(target_arch = "powerpc", target_arch = "mips", target_arch = "arm", not(target_feature = "v6"))))]
         pub use std::sync::atomic::AtomicU64;
 
-        #[cfg(any(target_arch = "powerpc", target_arch = "mips"))]
+        #[cfg(any(target_arch = "powerpc", target_arch = "mips", target_arch = "arm", not(target_feature = "v6")))]
         pub use portable_atomic::AtomicU64;
 
         pub use std::sync::Arc as Lrc;
--- a/compiler/rustc_data_structures/Cargo.toml
+++ b/compiler/rustc_data_structures/Cargo.toml
@@ -47,7 +47,7 @@ features = [
 memmap2 = "0.2.1"
 # tidy-alphabetical-end
 
-[target.'cfg(any(target_arch = "powerpc", target_arch = "mips"))'.dependencies]
+[target.'cfg(any(target_arch = "powerpc", target_arch = "mips", target_arch = "arm", not(target_feature = "v6")))'.dependencies]
 portable-atomic = "1.5.1"
 
 [features]
