--- a/src/dir_walker.rs
+++ b/src/dir_walker.rs
@@ -171,7 +171,7 @@ fn walk(dir: PathBuf, walk_data: &WalkDa
 
                                     prog_data.num_files.fetch_add(1, ORDERING);
                                     if let Some(ref file) = node {
-                                        prog_data.total_file_size.fetch_add(file.size, ORDERING);
+                                        prog_data.total_file_size.fetch_add(file.size.try_into().unwrap(), ORDERING);
                                     }
 
                                     return node;
--- a/src/progress.rs
+++ b/src/progress.rs
@@ -3,7 +3,7 @@ use std::{
     io::Write,
     path::Path,
     sync::{
-        atomic::{AtomicU64, AtomicU8, AtomicUsize, Ordering},
+        atomic::{AtomicU8, AtomicUsize, Ordering},
         mpsc::{self, RecvTimeoutError, Sender},
         Arc, RwLock,
     },
@@ -53,7 +53,7 @@ pub mod Operation {
 #[derive(Default)]
 pub struct PAtomicInfo {
     pub num_files: AtomicUsize,
-    pub total_file_size: AtomicU64,
+    pub total_file_size: AtomicUsize,
     pub state: AtomicU8,
     pub current_path: ThreadStringWrapper,
 }
@@ -80,14 +80,14 @@ pub struct RuntimeErrors {
 
 fn format_preparing_str(prog_char: char, data: &PAtomicInfo, output_display: &str) -> String {
     let path_in = data.current_path.get();
-    let size = human_readable_number(data.total_file_size.load(ORDERING), output_display);
+    let size = human_readable_number(data.total_file_size.load(ORDERING).try_into().unwrap(), output_display);
     format!("Preparing: {path_in} {size} ... {prog_char}")
 }
 
 fn format_indexing_str(prog_char: char, data: &PAtomicInfo, output_display: &str) -> String {
     let path_in = data.current_path.get();
     let file_count = data.num_files.load(ORDERING);
-    let size = human_readable_number(data.total_file_size.load(ORDERING), output_display);
+    let size = human_readable_number(data.total_file_size.load(ORDERING).try_into().unwrap(), output_display);
     let file_str = format!("{file_count} files, {size}");
     format!("Indexing: {path_in} {file_str} ... {prog_char}")
 }
